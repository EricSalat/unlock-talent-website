---
import Button from "./Button.astro";
import RoundArrowDown from "../icons/RoundArrowDown.astro";

const { header, body, content, color, backgroundColor } = Astro.props;
---

<div class="accordion">
  <div class="accordion-item">
    <div
      class="accordion-header"
      onclick="toggleAccordion(this)"
      style={{
        backgroundColor: backgroundColor || "#000",
      }}
    >
      <span class="round-arrow">
        <RoundArrowDown strokeColor="#fff" />
      </span>
      <p
        style={{
          color: color || "#fff",
        }}
      >
        {header}
      </p>
    </div>
    <div class="accordion-content">
      <p>{body}</p>
      <div>
        <Button content={content} />
      </div>
    </div>
  </div>
</div>


<script>
import autoAnimate from "@formkit/auto-animate";
const accordions = document.querySelectorAll('.accordion-header');

accordions.forEach(accordion => {
    autoAnimate(accordion as HTMLElement); // Aplica autoAnimate a cada elemento de la colecci√≥n
});

</script>

<style>
  p {
    font-size: 22px;
  }

  .accordion-content p{
    font-size: 18px;
  }

  .accordion {
    border: 2px solid #000;
    border-radius: 10px;
    margin-bottom: 20px;
    overflow: hidden;
    width: 100%;
  }

  .accordion-header {
    font-weight: 700;
    letter-spacing: 3px;
    background-color: #f4f4f4;
    padding: 15px 10px;
    cursor: pointer;
    display: flex;
    flex-direction: row;
    align-items: center;
    background-color: blue;
    gap: 12px;

  }

  .accordion-content {
    color: #000;
    padding: 20px;
    display: none;
    background-color: #fff;
    /* transition: transform all .35s; */
  }

  .accordion-content p {
    padding-bottom: 20px;
  }


  .accordion-item.active .accordion-content {
    display: block;
  }

  .round-arrow {
    transition: transform 0.3s ease;
  }

  .rotate {
    transform: rotate(-180deg);
}
</style>


